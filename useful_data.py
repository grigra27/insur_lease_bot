import pandas as pd
import asyncio

df = pd.read_csv('tariffs_online.csv', sep=';')

async def search_in_our_base(search_phrase):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –ª–∏–∑–∏–Ω–≥–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö.
    :param search_phrase: –°—Ç—Ä–æ–∫–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ–∏—Å–∫
    :return: –°—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å—è—Ö
    """
    # –∏–º–∏—Ç–∏—Ä—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å async handler
    await asyncio.sleep(0)
    used_df = df[df.property.str.contains(search_phrase, case=False)]
    if len(used_df) == 0:
        return f"""
‚ùóÔ∏è*–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É* **¬´{search_phrase}¬ª**.

üîç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞–∑–≤–∞–Ω–∏—è.

üí° *–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:*
- `Haval Jolion`
- `sitrak`
- `BMW X5`
"""
    records_count = len(used_df)
    property_min = round((used_df.property_value.min()) / 1000000, 3)
    property_median = round((used_df.property_value.median()) / 1000000, 3)
    property_max = round((used_df.property_value.max()) / 1000000, 3)
    tarif_min = round(used_df.tarif.min(), 2)
    tarif_median = round(used_df.tarif.median(), 2)
    tarif_max = round(used_df.tarif.max(), 2)
    insurance_type = used_df.type.mode()[0]
    insurance_company = used_df.insurer.mode()[0]
    result_phrase = f"""
üîç *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É:* _"{search_phrase}"_

üìÑ –ù–∞–π–¥–µ–Ω–æ *{records_count}* –∑–∞–ø–∏—Å{"—å" if records_count == 1 else "–∏"} –æ —Ç–∞–∫–æ–º –ø—Ä–µ–¥–º–µ—Ç–µ –ª–∏–∑–∏–Ω–≥–∞.

üí∞ *–¶–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –ª–∏–∑–∏–Ω–≥–∞:*
‚Ä¢ –ú–µ–¥–∏–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞: *{property_median} –º–ª–Ω ‚ÇΩ*
‚Ä¢ –î–∏–∞–ø–∞–∑–æ–Ω: –æ—Ç *{property_min} –º–ª–Ω ‚ÇΩ* –¥–æ *{property_max} –º–ª–Ω ‚ÇΩ*

üõ° *–°—Ç—Ä–∞—Ö–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ:*
‚Ä¢ –ú–µ–¥–∏–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ: *{tarif_median}%*
‚Ä¢ –î–∏–∞–ø–∞–∑–æ–Ω: –æ—Ç *{tarif_min}%* –¥–æ *{tarif_max}%*

üè∑ –ß–∞—â–µ –≤—Å–µ–≥–æ —Å—Ç—Ä–∞—Ö—É–µ—Ç—Å—è –∫–∞–∫: *"{insurance_type}"* 
üèô –ß–∞—â–µ –≤—Å–µ–≥–æ —Å—Ç—Ä–∞—Ö—É–µ—Ç—Å—è –≤ —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏: *"{insurance_company}"*
"""
    return result_phrase


def get_welcome_phrase():
    return (
        f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        f"üìä –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–∏ –ª–∏–∑–∏–Ω–≥–æ–≤–æ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞."
        f"–í –Ω–∞—à–µ–π –±–∞–∑–µ —Å–µ–π—á–∞—Å {len(df)} –∑–∞–ø–∏—Å–µ–π.\n\n"
        f"üîé –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –≤–∞—Å –ø—Ä–µ–¥–º–µ—Ç–∞ –ª–∏–∑–∏–Ω–≥–∞, "
        f"–Ω–∞–ø—Ä–∏–º–µ—Ä 'Haval Dargo' –∏–ª–∏ 'sitrak'."
    )
